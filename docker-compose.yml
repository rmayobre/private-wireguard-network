version: "3"

volumes:
    pihole-etc-pihole:
    pihole-etc-dnsmasq.d:
    wireguard:
    portainer_data:

networks:
  vpn_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

services:
  unbound:
    image: "mvance/unbound:latest"
    container_name: unbound
    restart: unless-stopped
    hostname: "unbound"
    volumes:
      - "./unbound:/opt/unbound/etc/unbound/"
    networks:
      vpn_network:
        ipv4_address: 10.2.0.200

  wireguard:
    depends_on: [unbound, pihole]
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - SERVERPORT=51820
      - PEERS=1
      - PEERDNS=10.2.0.100
      - INTERNAL_SUBNET=10.6.0.0
      - ALLOWEDIPS=10.2.0.0/24 # To hide client IP address on Internet 0.0.0.0/0
    volumes:
      - wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
    dns:
      - 10.2.0.100
      - 10.2.0.200
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      vpn_network:
        ipv4_address: 10.2.0.3

  pihole:
    depends_on: [unbound]
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    hostname: pihole
    dns:
      - 127.0.0.1
      - 10.2.0.200
    environment:
      TZ: "America/New_York"
      WEBPASSWORD: ""
      ServerIP: 10.1.0.100
      DNS1: 10.2.0.200
      DNS2: 10.2.0.200
    volumes:
      - "pihole-etc-pihole/:/etc/pihole/"
      - "pihole-etc-dnsmasq.d/:/etc/dnsmasq.d/"
    cap_add:
      - NET_ADMIN
    networks:
      vpn_network:
        ipv4_address: 10.2.0.100

  portainer:
    image: portainer/portainer-ce
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      vpn_network:
        ipv4_address: 10.2.0.101

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]    